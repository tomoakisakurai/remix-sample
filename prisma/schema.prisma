// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Contacts {
  id        String   @id
  first     String
  last      String
  avatar    String
  twitter   String
  notes     String
  favorite  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activity {
  id             Int             @id @default(autoincrement())
  name           String
  description    String?
  location       String
  category       String?
  minPrice       Float? // NULL許容
  maxPrice       Float? // NULL許容
  rating         Float?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  images         ActivityImage[] // ActivityとActivityImageの関係を示す
  ActivityDetail ActivityDetail?
  userId         Int?
  Favorite       Favorite[]
  User           User?           @relation(fields: [userId], references: [id])
  favoritedBy    User[]          @relation("UserFavorites")
}

model ActivityImage {
  id         Int      @id @default(autoincrement())
  activityId Int // 外部キー
  imageUrl   String
  createdAt  DateTime @default(now())
  activity   Activity @relation(fields: [activityId], references: [id])
}

model ActivityDetail {
  id               Int       @id @default(autoincrement())
  activityId       Int // Activityとの関連付け
  dateTime         DateTime?
  duration         String?
  ageLimit         String?
  servicesIncluded String?
  itemsRequired    String?
  notes            String?
  activity         Activity  @relation(fields: [activityId], references: [id])

  @@unique([activityId]) // activityIdはユニークであることを保証
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  favorites Activity[] @relation("UserFavorites")
  Activity  Activity[]
  Favorite  Favorite[]
}

model Favorite {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // UserモデルのID
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId Int // ActivityモデルのID

  @@id([userId, activityId]) // userIdとactivityIdの組み合わせを一意の識別子とする
}
